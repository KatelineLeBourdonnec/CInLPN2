% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{f_marker}
\alias{f_marker}
\title{Function that computes the difference (mat_Yi - mat_Nu_i), delates missing values (NAs) and 
returns a vector. mat_Yi is the outcomes and mat_Nu_i is the expectation}
\usage{
f_marker(
  Lambdai,
  nD,
  matrixP,
  tau,
  tau_i,
  DeltaT,
  Ytildi,
  YtildPrimi,
  x0i,
  alpha_mu0,
  xi,
  paraSig,
  alpha_mu,
  G_mat_A_0_to_tau_i,
  paraEtha2,
  if_link,
  zitr,
  ide,
  paras_k,
  K2_lambda_t,
  K2_lambda
)
}
\arguments{
\item{Lambdai}{a matrix of dimension nT x nD containing the sampled lambda_i}

\item{nD}{an integer indicating the number of processes}

\item{matrixP}{a matrix that matches markers to latent processes}

\item{tau}{a vector of integers indicating times}

\item{tau_i}{a vector of integers indicating times for individual i}

\item{DeltaT}{double that indicates the discretization step}

\item{x0i}{model.matrix for baseline's submodel}

\item{alpha_mu0}{a vector of parameters associated to the model.matrix for the baseline's submodel}

\item{xi}{model.matrix for change's submodel}

\item{alpha_mu}{a vector of parameters associated to the model.matrix for the change's submodel}

\item{G_mat_A_0_to_tau_i}{matrix containing  Prod(A_t)t=0,tau_i where A_t is the transition
matric containing at time t
 @param paraEtha2 transformation parameters
 @param if_link: link function indicator, 0 if linear, 1 if splines, 2 if thresholds
 @param zitr: minY and maxY of observed ordinal Y
 @param ide indicator if the values between zitr(0) and zitr(1) are observed in Y 
 @param paras_k: number of parameters for link function for each marker k
 @param K2_lambda_t: vector indicating to which latent process corresponds each value of Lambdai
 @param K2_lambda: vector indicating to which latent process corresponds each marker}

\item{Yi}{a matrix of the outcomes}
}
\value{
a double
}
\description{
Function that computes the difference (mat_Yi - mat_Nu_i), delates missing values (NAs) and 
returns a vector. mat_Yi is the outcomes and mat_Nu_i is the expectation
}
